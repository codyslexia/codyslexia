# Copyright (c) 2023-2024 Codyslexia
# @license MIT
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key", "@external"]) {
  query: Query
  mutation: Mutation
}

type Query {
  "Get a project by its id"
  project(id: ID!): Project
  "The full list of projects available to the current user"
  projects: [Project]
}

enum ProjectKind {
  "A project that is a website"
  WEB
  "A project that is a mobile app"
  MOBILE
  "A project that is a desktop app"
  API
}

enum ProjectEnvironment {
  "A project that is in development"
  DEVELOPMENT
  "A project that is in staging"
  STAGING
  "A project that is in production"
  PRODUCTION
}

input CreateProjectInput {
  "The id of the user who owns this project"
  userId: String!
  "The name of the project"
  name: String
  "The description of the project"
  description: String
  "The kind of project this is"
  kind: ProjectKind!
  "The environment this project is running in"
  environment: ProjectEnvironment
}

type Mutation {
  "Create a new project"
  createProject(input: CreateProjectInput): Project
}

type Project @key(fields: "id") {
  id: ID!
  "The id of the user who owns this project"
  userId: ID!
  "The name of the project"
  name: String
  "The description of the project"
  description: String
  "The kind of project this is"
  kind: ProjectKind
  "The environment this project is running in"
  environment: ProjectEnvironment
  "The user who owns this project"
  user: User
  "The date this project was created"
  createdAt: String
  "The date this project was last updated"
  updatedAt: String
}

extend type User @key(fields: "id") {
  id: ID! @external
  "The projects this user owns"
  projects: [Project!]!
}
